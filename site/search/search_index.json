{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Compute &amp; Cook <p>Computer cheatsheet - Cooking recipes</p>              Computer                         Cook"},{"location":"docs/compute/aws_s3_cli/","title":"AWS S3 CLI","text":""},{"location":"docs/compute/aws_s3_cli/#setup","title":"Setup","text":"<p>Install: <pre><code>$ pip install awscli awscli-plugin-endpoint awscrt\n</code></pre> Configure (here with OVHcloud as backend): <pre><code>$ cat ~/.aws/config\n[plugins]\nendpoint = awscli_plugin_endpoint\n\n[profile my-profile-name]\nregion = gra\ns3 =\n  endpoint_url = https://s3.gra.io.cloud.ovh.net/\n  signature_version = s3v4\ns3api =\n  endpoint_url = https://s3.gra.io.cloud.ovh.net/\n\n\n\n$ cat ~/.aws/credentials\n[my-profile-name]\naws_access_key_id = &lt;access key&gt;\naws_secret_access_key = &lt;secret key&gt;\n</code></pre></p>"},{"location":"docs/compute/aws_s3_cli/#list-objects","title":"List objects","text":"<p><pre><code>$ aws s3 ls s3://my-bucket-name --human-readable --summarize --recursive --profile my-profile-name\n</code></pre> <pre><code>2024-11-30 03:30:25    1.1 MiB foobar/2024-11-28.zst\n2024-12-01 03:01:17    1.1 MiB foobar/2024-11-29.zst\n...\n\nTotal Objects: 96\n   Total Size: 64.9 MiB\n</code></pre></p>"},{"location":"docs/compute/aws_s3_cli/#list-objects-versions","title":"List objects versions","text":"<p>In case bucket is versioned: <pre><code>$ aws s3api list-object-versions --bucket my-bucket-name --profile my-profile-name\n{\n    \"Versions\": [\n        {\n            \"ETag\": \"\\\"866f2973a36c3505c37d3959e24eba37\\\"\",\n            \"Size\": 409011,\n            \"StorageClass\": \"STANDARD\",\n            \"Key\": \"foobar/2024-11-28.zst\",\n            \"VersionId\": \"1732933825.600330\",\n            \"IsLatest\": false,\n            \"LastModified\": \"2024-11-30T02:30:25.000Z\",\n            \"Owner\": {\n                \"DisplayName\": \"12345:user-xxx\",\n                \"ID\": \"12345:user-xxx\"\n            }\n        },\n        {\n            \"ETag\": \"\\\"5e85b9d1b17904f3d0c6253eeab722f6\\\"\",\n            \"Size\": 1180297,\n            \"StorageClass\": \"STANDARD\",\n            \"Key\": \"foobar/2024-11-28.zst\",\n            \"VersionId\": \"1732934824.643878\",\n            \"IsLatest\": true,\n            \"LastModified\": \"2024-11-31T02:30:25.000Z\",\n            \"Owner\": {\n                \"DisplayName\": \"12345:user-xxx\",\n                \"ID\": \"12345:user-xxx\"\n            }\n        },\n        ...\n    ]\n}\n</code></pre></p>"},{"location":"docs/compute/aws_s3_cli/#get-objects","title":"Get objects","text":"<p><pre><code>$ aws s3api head-object --bucket my-bucket-name --key foobar/2025-01-14.zst --profile my-profile-name\n</code></pre> <pre><code>{\n    \"AcceptRanges\": \"bytes\",\n    \"LastModified\": \"Thu, 16 Jan 2025 03:58:27 GMT\",\n    \"ContentLength\": 400257,\n    \"ETag\": \"\\\"0787c4c4238c8924a8ca7f6b83094a4c\\\"\",\n    \"VersionId\": \"1736999907.007856\",\n    \"ContentType\": \"binary/octet-stream\",\n    \"Metadata\": {},\n    \"ReplicationStatus\": \"COMPLETED\"\n}\n</code></pre></p>"},{"location":"docs/compute/aws_s3_cli/#upload-objects","title":"Upload objects","text":"<pre><code>$ aws s3 cp /home/me/some_file s3://my-bucket-name/some_path/somefile --profile my-profile-name\n</code></pre>"},{"location":"docs/compute/aws_s3_cli/#download-objects","title":"Download objects","text":"<pre><code>$ aws s3 cp s3://my-bucket-name/some_path/somefile /home/me/some_file --profile my-profile-name\n</code></pre>"},{"location":"docs/compute/aws_s3_cli/#delete-objects","title":"Delete objects","text":"<pre><code># --version-id is needed if bucket is versioned, otherwise you will just create a new \"empty\" version of the object without deleting the \"real\" file\n$ aws s3api delete-object --bucket my-bucket-name --key foobar/2025-01-14.zst --version-id 1729673115.690901 --profile my-profile-name\n</code></pre>"},{"location":"docs/compute/aws_s3_cli/#replication-setup","title":"Replication setup","text":"<p>Create a local file (eg <code>bucket-replica-config.json</code>) with bucket replication config: <pre><code>{\n  \"Role\": \"arn:aws:iam::1234566:role/s3-replication\",\n  \"Rules\": [\n    {\n      \"ID\": \"my_replication_name\",\n      \"Priority\": 1,\n      \"Filter\": {},\n      \"Status\": \"Enabled\",\n      \"Destination\": {\n        \"Bucket\": \"arn:aws:s3:::my-destination-bucket\"\n      },\n      \"DeleteMarkerReplication\": {\n        \"Status\": \"Enabled\"\n      }\n    }\n  ]\n}\n</code></pre> Apply it: <pre><code>$ aws s3api put-bucket-replication --replication-configuration \"file://bucket-replica-config.json\" --bucket my-bucket-name --profile my-profile-name\n</code></pre> Ensure it's OK: <pre><code>$ aws s3api get-bucket-replication --bucket my-bucket-name --profile my-profile-name\n</code></pre> <pre><code>{\n    \"ReplicationConfiguration\": {\n        \"Role\": \"arn:aws:iam::1234566:role/s3-replication\",\n        \"Rules\": [\n            {\n                \"ID\": \"my_replication_name\",\n                \"Priority\": 1,\n                \"Filter\": {},\n                \"Status\": \"Enabled\",\n                \"Destination\": {\n                    \"Bucket\": \"arn:aws:s3:::my-destination-bucket\"\n                },\n                \"DeleteMarkerReplication\": {\n                    \"Status\": \"Enabled\"\n                }\n            }\n        ]\n    }\n}\n</code></pre></p>"},{"location":"docs/compute/aws_s3_cli/#generate-download-url","title":"Generate download URL","text":"<p><pre><code>aws s3 presign s3://my-bucket-name/foobar/2024-01-02.zst --expires-in 604800 --profile my-profile-name\n</code></pre> <pre><code>https://s3.gra.io.cloud.ovh.net/my-bucket-name/foobar/2024-01-02.zst?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=...\n</code></pre></p>"},{"location":"docs/compute/aws_s3_cli/#debug","title":"Debug","text":"<pre><code>$ aws --debug s3api get-object ...\n</code></pre>"},{"location":"docs/compute/bash/","title":"Bash","text":""},{"location":"docs/compute/bash/#replace-line-breaks-with-n-in-bash","title":"Replace line breaks with <code>\\n</code> in bash","text":"<pre><code>$ sed ':a;N;$!ba;s/\\n/\\n/g'\n</code></pre> <p>Example with a GPG key: <pre><code>$ cat my-pub-key.gpg\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEY0U3WBYJKwYBBAHaRw8BAQdA/+X92euriYPzQiFAnll233epEjIrRg5NjvX9\nGI2ubAi0KmF6ZXphZV/Dp3kgYXpldSA8aXV6ZXLDoMOndXplcmFAw6Z6ZXphLmZy\nPoiQBBMWCAA4FiEErm9qR639pFyOCR3lkjAjOeRHFXIFAmNFN1gCGwMFCwkIBwIG\nFQoJCAsCBBYCAwECHgECF4AACgkQkjAjOeRHFXJVqAD9HBET1rSmvR7T0g+AytMC\nbRhA5nuAhUAiZLZBPi7YzegA/2oiUfH+RqNrWmTogAuC4DnOlysRDF4ETM5dpzIm\npKMCuDgEY0U3WBIKKwYBBAGXVQEFAQEHQARwYrThl0KXvNaypSPMRSpI7knavFxH\nouJhP07bEAEuAwEIB4h4BBgWCAAgFiEErm9qR639pFyOCR3lkjAjOeRHFXIFAmNF\nN1gCGwwACgkQkjAjOeRHFXI5/gEAq04angadKntUSMpJAVd3L/Wwkt41Xw7lfo/k\nWeKoJDwBAPKeat0p8zbLIPDQvmcxsfjJ/GnapH206f+VVO/nZcAP\n=4EN5\n-----END PGP PUBLIC KEY BLOCK-----\n\n$ gpg --armor --export AE6F6A47ADFDA45C8E091DE592302339E4471572 | sed ':a;N;$!ba;s/\\n/\\\\n/g'\n-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\nmDMEY0U3WBYJKwYBBAHaRw8BAQdA/+X92euriYPzQiFAnll233epEjIrRg5NjvX9\\nGI2ubAi0KmF6ZXphZV/Dp3kgYXpldSA8aXV6ZXLDoMOndXplcmFAw6Z6ZXphLmZy\\nPoiQBBMWCAA4FiEErm9qR639pFyOCR3lkjAjOeRHFXIFAmNFN1gCGwMFCwkIBwIG\\nFQoJCAsCBBYCAwECHgECF4AACgkQkjAjOeRHFXJVqAD9HBET1rSmvR7T0g+AytMC\\nbRhA5nuAhUAiZLZBPi7YzegA/2oiUfH+RqNrWmTogAuC4DnOlysRDF4ETM5dpzIm\\npKMCuDgEY0U3WBIKKwYBBAGXVQEFAQEHQARwYrThl0KXvNaypSPMRSpI7knavFxH\\nouJhP07bEAEuAwEIB4h4BBgWCAAgFiEErm9qR639pFyOCR3lkjAjOeRHFXIFAmNF\\nN1gCGwwACgkQkjAjOeRHFXI5/gEAq04angadKntUSMpJAVd3L/Wwkt41Xw7lfo/k\\nWeKoJDwBAPKeat0p8zbLIPDQvmcxsfjJ/GnapH206f+VVO/nZcAP\\n=4EN5\\n-----END PGP PUBLIC KEY BLOCK-----\n</code></pre></p> <p>To do the opposite (replace the <code>\\n</code> string with a real line breaks): <pre><code>$ echo \"my\\ntext\\nis\\nhere\" | sed 's/\\\\n/\\n/g'\nmy\ntext\nis\nhere\n</code></pre> Source and details.</p>"},{"location":"docs/compute/debian/","title":"Debian","text":""},{"location":"docs/compute/debian/#which-package-for","title":"Which package for ... ?","text":"<pre><code># ps: command not found\n$ apt install procps\n# netstat: command not found\n$ apt install net-tools\n</code></pre>"},{"location":"docs/compute/debian/#list-files-installed-from-a-given-package","title":"List files installed from a given package","text":"<pre><code># dpkg-query -L &lt;package_name&gt;\n$ dpkg-query -L webp\n/.\n/usr\n/usr/bin\n/usr/bin/cwebp\n/usr/bin/dwebp\n/usr/bin/gif2webp\n...\n</code></pre>"},{"location":"docs/compute/debian/#which-package-installed-a-given-binary","title":"Which package installed a given binary ?","text":"<pre><code># dpkg -S &lt;package_name&gt;\n$ dpkg -S cwebp\nwebp: /usr/bin/cwebp\nwebp: /usr/share/man/man1/cwebp.1.gz\n</code></pre>"},{"location":"docs/compute/docker/","title":"Docker","text":""},{"location":"docs/compute/docker/#docker","title":"Docker","text":""},{"location":"docs/compute/docker/#keep-a-docker-container-running-for-ever","title":"Keep a Docker container running for ever","text":"<pre><code>FROM ubuntu:latest\n\nENTRYPOINT [\"tail\", \"-f\", \"/dev/null\"]\n</code></pre>"},{"location":"docs/compute/git/","title":"Git","text":""},{"location":"docs/compute/git/#sign-commits-with-a-given-key-for-a-given-repo","title":"Sign commits with a given key for a given repo","text":"<pre><code>$ vim .git/config\n# add\n[user]\n    name = John Doe\n    email = john.doe@gmail.com\n    signingkey = E9C202EE8524306B1859990FCF3873C85DD3C6E7\n</code></pre>"},{"location":"docs/compute/git/#sign-old-commits","title":"Sign old commits","text":"<pre><code># Just the last commit\n$ git commit -S --amend\n# 5 last commits\n$ git rebase --signoff HEAD~5\n</code></pre>"},{"location":"docs/compute/git/#check-git-log-with-signature-status","title":"Check git log with signature status","text":"<p><pre><code>$ git log --show-signature\n</code></pre> <pre><code>commit 389a7fd3390dbe8310085a5444233c6e955f0d89 (HEAD -&gt; master)\ngpg: Signature made Thu 16 Jan 2025 05:36:41 PM CET\ngpg:                using EDDSA key E9C202EE8524306B1859990FCF3873C85DD3C6E7\ngpg: Good signature from \"Pierre Frayer &lt;pfrayer@xmail.com&gt;\" [ultimate]\nAuthor: Pierre Frayer &lt;pfrayer@xmail.com&gt;\nDate:   Thu Jan 16 2025 @ 5:33 PM\n\n    feat: git commit signature\n\n    Signed-off-by: Pierre Frayer &lt;pfrayer@xmail.com&gt;\n</code></pre></p>"},{"location":"docs/compute/git/#fail-to-sign-git-commit","title":"Fail to sign git commit","text":"<p>When doing <code>git commit</code> with GPG signature enabled, you encounter this error: <pre><code>$ git commit\nerror: gpg failed to sign the data\nfatal: failed to write commit object\n</code></pre> Get more details about the error by enabling GIT_TRACE: <pre><code>$ GIT_TRACE=1 git commit\n...\ntrace: built-in: git commit --amend --no-edit -n -S\ntrace: run_command: gpg --status-fd=2 -bsau E9C202EE8524306B1859990FCF3873C85DD3C6E7\n</code></pre> Most of the time, the solution will be: <pre><code>$ export GPG_TTY=$(tty)\n$ git commit\n</code></pre></p>"},{"location":"docs/compute/images/","title":"Images, videos &amp; PDF","text":""},{"location":"docs/compute/images/#reduce-pdf-size-on-linux","title":"Reduce PDF size on Linux","text":"<p>Use <code>ghostscript</code> to reduce PDF size without altering PDF quality too much.</p> <pre><code># Install ghostscript\n$ sudo apt install ghostscript\n\n# Use it, update input &amp; output paths\n$ gs -dNOPAUSE \\\n    -dBATCH \\\n    -sDEVICE=pdfwrite \\\n    -dCompatibilityLevel=1.4 \\\n    -dPDFSETTINGS=/ebook \\\n    -sOutputFile=/path/to/output.pdf \\\n    /path/to/input.pdf\n</code></pre> <p>Here the lower quality (and thus the smallest size) is brought by the <code>-dPDFSETTINGS=/ebook</code> param.</p> <p>Other possible values for this params are (from lower quality to best quality):</p> <ul> <li><code>/screen</code>: low-resolution output similar to the Acrobat Distiller (up to version X) \"Screen Optimized\" setting.</li> <li><code>/ebook</code>: medium-resolution output similar to the Acrobat Distiller (up to version X) \"eBook\" setting.</li> <li><code>/printer</code>: output similar to the Acrobat Distiller \"Print Optimized\" (up to version X) setting.</li> <li><code>/prepress</code>: output similar to Acrobat Distiller \"Prepress Optimized\" (up to version X) setting.</li> </ul>"},{"location":"docs/compute/images/#convert-image-to-webp-format","title":"Convert image to .webp format","text":"<pre><code>$ sudo apt install webp\n\n# -q is the quality to keep in percent\n# -o is the name of the output file\n$ cwebp -q 100 my_image.png -o my_image.webp\n</code></pre>"},{"location":"docs/compute/images/#resize-images","title":"Resize images","text":"<pre><code>$ sudo apt install imagemagick\n\n# Resize image in fixed dimensions\n$ convert my_image.webp -resize 200x100 my_image_resized.webp\n\n# Resize image in %\n$ convert my_image.webp -resize 700% my_image.webp\n\n# Resise big image without impacting computer memory\n$ convert -limit memory 2mb -limit map 2mb my_image.webp -resize 700% my_image.webp\n</code></pre>"},{"location":"docs/compute/kubernetes/","title":"Kubernetes","text":""},{"location":"docs/compute/kubernetes/#get-objects","title":"Get objects","text":"<p>Filter pods per label: <pre><code>$ kubectl get pods -l \"mycompanny.region=EU\"\n</code></pre></p> <p>Get pod current metrics: <pre><code>$ kubectl describe PodMetrics &lt;pod_name&gt;\n</code></pre></p> <p>List available API resources (which depends on the k8s server version): <pre><code>$ kubectl api-resources -o wide\nNAME                               SHORTNAMES                                          APIVERSION                             NAMESPACED   KIND                              VERBS\nbindings                                                                               v1                                     true         Binding                           [create]\ncomponentstatuses                  cs                                                  v1                                     false        ComponentStatus                   [get list]\nconfigmaps                         cm                                                  v1                                     true         ConfigMap                         [create delete deletecollection get list patch update watch]\nendpoints                          ep                                                  v1                                     true         Endpoints                         [create delete deletecollection get list patch update watch]\nevents                             ev                                                  v1                                     true         Event                             [create delete deletecollection get list patch update watch]\nlimitranges                        limits                                              v1                                     true         LimitRange                        [create delete deletecollection get list patch update watch]\nnamespaces                         ns                                                  v1                                     false        Namespace                         [create delete get list patch update watch]\nnodes                              no                                                  v1                                     false        Node                              [create delete deletecollection get list patch update watch]\n...\n</code></pre></p>"},{"location":"docs/compute/kubernetes/#logs","title":"Logs","text":"<p>Get deployment logs: <pre><code>$ kubectl logs deployment/&lt;name-of-deployment&gt;\n</code></pre></p>"},{"location":"docs/compute/kubernetes/#failure-analysis","title":"Failure analysis","text":"<p>List non-running pods, display their events: <pre><code>$ for pod in $(kubectl get pods --field-selector status.phase!=Running | grep -v \"^NAME\" | awk '{print $1}' | sort -u)\ndo\n    echo \"POD: {$pod}\"\n    kubectl get event --field-selector involvedObject.name=${pod}\n    echo \"----\"\ndone\n</code></pre></p>"},{"location":"docs/compute/logs/","title":"Logs","text":""},{"location":"docs/compute/logs/#generate-fake-logs","title":"Generate fake logs","text":"<p>If you need to generate fake logs, use mingrammer/flog:</p> <p><pre><code># 1048576 is the size of logs to generate (in bytes)\n$ docker run -it --rm mingrammer/flog -b 1048576 &gt; 1_mega.log\n\n# If you want to continuously generate logs (without a file size)\n# for instance generate fake Apache logs\n# with one new log each 2sec\n$ docker run -it --rm mingrammer/flog -f apache_combined -t stdout -n 2 -l\n</code></pre> It supports several logs format for the output file, more details on the project's README.</p>"},{"location":"docs/compute/mongodb/","title":"MongoDB","text":""},{"location":"docs/compute/mongodb/#mongosh","title":"<code>mongosh</code>","text":""},{"location":"docs/compute/mongodb/#list-collections","title":"List collections","text":""},{"location":"docs/compute/mongodb/#find-item-in-collections","title":"Find item in collections","text":""},{"location":"docs/compute/mongodb/#update-one-update-many","title":"Update one, update many","text":""},{"location":"docs/compute/pgp/","title":"PGP / GPG","text":"<p>(reminder: PGP is the protocol, GPG is the tool using this protocol)</p>"},{"location":"docs/compute/pgp/#generate-a-key-pair","title":"Generate a key-pair","text":"<pre><code>$ gpg --expert --full-generate-key\n</code></pre>"},{"location":"docs/compute/pgp/#list-keys","title":"List keys","text":"<pre><code># Public keys\n$ gpg -k\n# Private keys\n$ gpg -K\n</code></pre>"},{"location":"docs/compute/pgp/#trust-a-key","title":"Trust a key","text":"<pre><code>$ gpg --edit-key 7D438CA8D0C6D57EA163751C2C800B246796CFC9\ngpg&gt; trust\nPlease decide how far you trust this user to correctly verify other users' keys\n(by looking at passports, checking fingerprints from different sources, etc.)\n\n  1 = I don't know or won't say\n  2 = I do NOT trust\n  3 = I trust marginally\n  4 = I trust fully\n  5 = I trust ultimately\n  m = back to the main menu\n\nYour decision? 5\n\ngpg&gt; save\n</code></pre>"},{"location":"docs/compute/pgp/#fail-to-sign-git-commit","title":"Fail to sign git commit","text":"<p>When trying to <code>git commit</code> with GPG signature, you could encounter the following error: <pre><code>error: gpg failed to sign the data\nfatal: failed to write commit object\n</code></pre> Get more details about the error by enabling <code>GIT_TRACE</code>: <pre><code>$ GIT_TRACE=1 git commit\n...\ntrace: built-in: git commit --amend --no-edit -n -S\ntrace: run_command: gpg --status-fd=2 -bsau E9C202EE8524306B1859990FCF3873C85DD3C6E7\n...\n</code></pre> If you have this output, most of the time the solution will be: <pre><code>$ export GPG_TTY=$(tty)\n$ git commit\n</code></pre></p>"},{"location":"docs/compute/pgp/#inspect-a-pgp-key-with-hokey","title":"Inspect a PGP key with hokey","text":"<pre><code># Install hokey (https://hackage.haskell.org/package/hopenpgp-tools)\n$ sudo apt install hopenpgp-tools\n\n# Get the available PGP keys on your machine. Retrieve the fingerprint or the user ID:\n$ gpg --list-key\n--------------------------------\npub   ed25519 2022-04-06 [SC]\n      7D438CA8D0C6D57EA163751C2C800B246796CFC9\nuid           [ultimate] John Doe &lt;john.doe@example.org&gt;\nsub   cv25519 2022-04-06 [E]\n\n# Now, simply export the key and pipe it to hokey lint:\ngpg --export 7D438CA8D0C6D57EA163751C2C800B246796CFC9 | hokey lint\n# Or\ngpg --export \"John Doe\" | hokey lint\n\n# Output:\nhokey (hopenpgp-tools) 0.22\nCopyright (C) 2012-2019  Clint Adams\nhokey comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome to redistribute it under certain conditions.\n\nKey has potential validity: good\nKey has fingerprint: 7D43 8CA8 D0C6 D57E A163  751C 2C80 0B24 6796 CFC9\nChecking to see if key is OpenPGPv4: V4\nChecking to see if key is RSA or DSA (&gt;= 2048-bit): EdDSA 256\nChecking user-ID- and user-attribute-related items:\n  Jogn Doe &lt;john.doe@example.org&gt;:\n    Self-sig hash algorithms: [SHA-256]\n    Preferred hash algorithms: [SHA-512, SHA-384, SHA-256, SHA-224, SHA-1]\n    Key expiration times: []\n    Key usage flags: [[sign-data, certify-keys]]\nChecking subkeys:\n  one of the subkeys is encryption-capable: True\n  fpr: 43C3 C78E 95BA 7170 4B4B  2342 F324 1786 F03A DAF0\n    version: v4\n    timestamp: 20220406-140557\n    algo/size: ECDH 256\n    binding sig hash algorithms: [SHA-256]\n    usage flags: [[encrypt-storage, encrypt-communications]]\n    embedded cross-cert: False\n    cross-cert hash algorithms: [SHA-256]\n</code></pre>"},{"location":"docs/compute/python/","title":"Python","text":""},{"location":"docs/compute/python/#pyenv","title":"<code>pyenv</code>","text":""},{"location":"docs/compute/python/#install-pyenv","title":"Install <code>pyenv</code>","text":"<p><pre><code>$ sudo apt-get install -y make build-essential git libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev\n\n$ curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash\n</code></pre> Also set the following in your <code>~/.bashrc</code> or <code>~/.zshrc</code>: <pre><code># PyEnv\nexport PATH=\"${HOME}/.pyenv/bin:${PATH}\"\neval \"$(${HOME}/.pyenv/bin/pyenv init --path)\"\neval \"$(${HOME}/.pyenv/bin/pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\n</code></pre></p>"},{"location":"docs/compute/python/#cheatsheet","title":"Cheatsheet","text":"<p>Main usage is:</p> <ul> <li>Install a new Python version</li> <li>Create a new <code>virtualenv</code> using this version</li> <li>Make your project use this <code>virtualenv</code></li> <li>Install dependencies / run your project inside this <code>virtualenv</code></li> </ul> <pre><code>$ pyenv install 3.12.1\n$ pyenv rehash\n$ pyenv virtualenv 3.12.1 my-project\n$ cd ~/workspace/my-project\n$ pyenv local my-project\n$ python --version\n# Python 3.12.1\n</code></pre>"},{"location":"docs/compute/python/#pyenv-install","title":"<code>pyenv install</code>","text":"<p>List available remote Python versions you can install: <pre><code>$ pyenv install -l\n</code></pre> Install Python 3.9.12: <pre><code>$ pyenv install 3.9.12\n$ pyenv rehash\n</code></pre></p>"},{"location":"docs/compute/python/#pyenv-versions","title":"<code>pyenv versions</code>","text":"<p>List locally installed versions: <pre><code>$ pyenv versions\n</code></pre></p>"},{"location":"docs/compute/python/#pyenv-local","title":"<code>pyenv local</code>","text":"<p>Sets a local application-specific pyenv virtualenv in the current directory: <pre><code>$ pwd\n# ~/workspace/my-project\n$ pyenv local my-pyenv-virtualenv-name\n</code></pre></p> <p>Sets a local application-specific pyenv virtualenv in the current directory: <pre><code>$ pyenv local 2.7.6\n</code></pre></p> <p>Unset the local version: <pre><code>$ pyenv local --unset\n# or\n$ rm .python-version\n</code></pre></p>"},{"location":"docs/compute/python/#pyenv-virtualenv","title":"<code>pyenv virtualenv</code>","text":"<p>List locally created <code>virtualenv</code>s: <pre><code>$ pyenv virtualenvs\n</code></pre></p> <p>Create a new <code>virtualenv</code>: <pre><code># From system's Python version with name `my-project`:\n$ pyenv virtualenv my-project\n# From a given Python version:\n$ pyenv virtualenv 3.9.12 my-other-project\n</code></pre></p> <p>Delete an existing <code>virtualenv</code>: <pre><code>$ pyenv uninstall my-project\n</code></pre></p>"},{"location":"docs/compute/python/#upgrade-pyenv","title":"Upgrade <code>pyenv</code>","text":"<pre><code>$ cd $(pyenv root)\n$ git pull\n</code></pre>"},{"location":"docs/compute/ssl/","title":"TLS &amp; SSL","text":""},{"location":"docs/compute/ssl/#display-the-contents-of-a-ssl-certificate","title":"Display the contents of a SSL certificate","text":""},{"location":"docs/compute/ssl/#for-a-local-file-certificate-file","title":"For a local file certificate file","text":"<p><pre><code>$ openssl x509 -in /usr/share/ca-certificates/mozilla/ISRG_Root_X1.crt  -text\n</code></pre> <pre><code>Certificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            82:10:cf:b0:d2:40:e3:59:44:63:e0:bb:63:82:8b:00\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Jun  4 11:04:38 2015 GMT\n            Not After : Jun  4 11:04:38 2035 GMT\n        Subject: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (4096 bit)\n                Modulus:\n                    00:ad:e8:24:73:f4:14:37:f3:9b:9e:2b:57:28:1c:\n                    87:be:dc:b7:df:38:90:8c:6e:3c:e6:57:a0:78:f7:\n                    75:c2:a2:fe:f5:6a:6e:f6:00:4f:28:db:de:68:86:\n                    ...\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier:\n                79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n    Signature Algorithm: sha256WithRSAEncryption\n         55:1f:58:a9:bc:b2:a8:50:d0:0c:b1:d8:1a:69:20:27:29:08:\n         ac:61:75:5c:8a:6e:f8:82:e5:69:2f:d5:f6:56:4b:b9:b8:73:\n         10:59:d3:21:97:7e:e7:4c:71:fb:b2:d2:60:ad:39:a8:0b:ea:\n         ...\n-----BEGIN CERTIFICATE-----\nMIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4\n...\n-----END CERTIFICATE-----\n</code></pre></p>"},{"location":"docs/compute/ssl/#for-a-remote-website","title":"For a remote website","text":"<pre><code>$ openssl s_client -connect ovhcloud.com:443\n</code></pre>"},{"location":"docs/compute/whois/","title":"<code>whois</code>","text":""},{"location":"docs/compute/whois/#get-all-ip-ranges-for-a-given-asn","title":"Get all IP ranges for a given ASN","text":"<pre><code>$ whois -h whois.radb.net -- '-i origin AS16276' | grep \"^route\"\nroute:          2.57.18.0/24\nroute:          2.57.18.0/24\nroute:          2.57.242.0/24\nroute:          5.39.0.0/17\nroute:          5.83.153.0/24\n...\n</code></pre> <p>Source</p>"},{"location":"docs/cook/sale/","title":"Sal\u00e9","text":""},{"location":"docs/cook/sucre/","title":"Sucr\u00e9","text":""}]}